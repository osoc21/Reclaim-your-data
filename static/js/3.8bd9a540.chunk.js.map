{"version":3,"sources":["../node_modules/n3/node_modules/readable-stream/errors-browser.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/n3/src/IRIs.js","../node_modules/process/browser.js","../node_modules/inherits/inherits_browser.js","../node_modules/n3/src/N3Lexer.js","../node_modules/n3/node_modules/readable-stream/readable-browser.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_readable.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/state.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_writable.js","../node_modules/string_decoder/lib/string_decoder.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_transform.js","../node_modules/queue-microtask/index.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/buffer_list.js","../node_modules/util-deprecate/browser.js","../node_modules/safe-buffer/index.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/async_iterator.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/from-browser.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/pipeline.js","../node_modules/n3/src/N3Util.js","../node_modules/n3/src/N3DataFactory.js","../node_modules/n3/src/N3Parser.js","../node_modules/n3/src/N3Writer.js","../node_modules/n3/src/N3Store.js","../node_modules/n3/src/N3StreamParser.js","../node_modules/n3/src/N3StreamWriter.js"],"names":["codes","createErrorType","code","message","Base","Error","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","call","this","getMessage","prototype","Object","create","constructor","__proto__","name","oneOf","expected","thing","Array","isArray","len","length","map","i","String","concat","slice","join","value","TypeError","actual","determiner","search","pos","msg","substr","replace","str","this_len","undefined","substring","endsWith","type","start","indexOf","includes","arg","module","exports","objectKeys","keys","obj","key","push","Duplex","Readable","require","Writable","v","method","options","allowHalfOpen","readable","writable","once","onend","_writableState","ended","process","nextTick","onEndNT","self","end","defineProperty","enumerable","get","highWaterMark","getBuffer","_readableState","destroyed","set","RDF","XSD","SWAP","xsd","decimal","boolean","double","integer","string","rdf","nil","first","rest","langString","owl","sameAs","r","forSome","forAll","log","implies","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","args","arguments","apply","title","browser","env","argv","version","versions","on","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","ctor","superCtor","super_","configurable","TempCtor","namespaces","escapeSequence","escapeReplacements","illegalIriChars","lineModeRegExps","_iri","_unescapedIri","_simpleQuotedString","_langcode","_blank","_newline","_comment","_whitespace","_endOfFile","invalidRegExp","N3Lexer","_simpleApostropheString","_prefix","_prefixed","_variable","_number","_boolean","_keyword","_sparqlKeyword","_shortPredicates","_lineMode","lineMode","_n3Mode","RegExp","n3","_comments","comments","_literalClosingPos","callback","inputFinished","input","_input","outputComments","whiteSpaceMatch","comment","exec","line","_line","prefix","test","firstChar","match","matchLength","inconclusive","_previousMarker","_unescape","reportSyntaxError","_parseLiteral","toUpperCase","token","previousToken","_syntaxError","item","invalid","replaced","sequence","unicode4","unicode8","escapedChar","fromCharCode","Number","parseInt","charCode","opening","openingLength","closingPos","Math","max","backslashCount","raw","lines","split","issue","err","context","error","tokens","_tokenizeToEnd","t","queueMicrotask","_pendingBuffer","setEncoding","data","Buffer","Stream","Transform","PassThrough","finished","pipeline","ERR_STREAM_PREMATURE_CLOSE","eos","stream","opts","called","_len","_key","onlegacyfinish","onfinish","writableEnded","readableEnded","endEmitted","onerror","onclose","onrequest","req","setHeader","abort","isRequest","ReadableState","EventEmitter","EElistenerCount","emitter","OurUint8Array","global","Uint8Array","debug","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","from","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","objectMode","readableObjectMode","buffer","pipes","pipesCount","flowing","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","decoder","encoding","read","_read","destroy","_destroy","readableAddChunk","chunk","addToFront","skipChunkCheck","er","state","emitReadable","emitReadable_","onEofChunk","isBuffer","chunkInvalid","getPrototypeOf","_uint8ArrayToBuffer","addChunk","write","maybeReadMore","unshift","_undestroy","undestroy","cb","isPaused","enc","p","head","content","next","clear","MAX_HWM","howMuchToRead","n","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","listenerCount","resume","nReadingNextTick","resume_","fromList","ret","shift","consume","endReadable","endReadableNT","wState","xs","x","l","nOrig","doRead","pipe","dest","pipeOpts","src","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","ondrain","ondata","cleanedUp","needDrain","pipeOnDrain","pause","event","fn","_events","dests","index","splice","ev","res","wrap","_this","bind","Symbol","asyncIterator","_fromList","iterable","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","errorEmitted","ending","finalCalled","prefinished","rState","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","isFinite","floor","CorkedRequest","entry","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","realHasInstance","ERR_MULTIPLE_CALLBACK","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writecb","writelen","onwriteStateUpdate","finishMaybe","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","bufferedRequestCount","_write","writev","_writev","final","_final","doWrite","onwriteDrain","holder","count","allBuffers","isBuf","callFinal","need","prefinish","current","out","_","hasInstance","Function","object","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","toLowerCase","endWritable","isEncoding","nb","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","allocUnsafe","utf8CheckByte","byte","buf","utf8CheckExtraBytes","copy","toString","c","charCodeAt","total","j","utf8CheckIncomplete","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","_transform","flush","_flush","done","err2","promise","globalThis","Promise","resolve","then","catch","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_defineProperty","_defineProperties","target","props","descriptor","inspect","custom","instance","Constructor","_classCallCheck","tail","protoProps","staticProps","s","alloc","offset","hasStrings","_getString","_getBuffer","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","depth","customInspect","config","localStorage","val","warned","console","trace","warn","copyProps","dst","SafeBuffer","encodingOrOffset","allocUnsafeSlow","size","fill","SlowBuffer","_Object$setPrototypeO","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","reject","lastPromise","wrapForNext","_this2","_Object$create","iterator","ERR_MISSING_ARGS","destroyer","closed","to","popCallback","streams","pop","destroys","reduce","isNamedNode","term","termType","isBlankNode","isLiteral","isVariable","isDefaultGraph","inDefaultGraph","quad","graph","iri","factory","prefixes","defaultPrefixes","processPrefix","cache","local","namedNode","N3DataFactory","DEFAULTGRAPH","_blankNodeCounter","escapedLiteral","quadId","DataFactory","NamedNode","blankNode","BlankNode","variable","Variable","literal","languageOrDataType","Literal","datatype","isInteger","isNaN","defaultGraph","triple","Term","id","other","lastIndexOf","atPos","datatypeString","dtPos","char","language","DefaultGraph","termFromId","endPos","components","unescapeQuotes","termToId","escapeQuotes","subject","predicate","Quad","_subject","_predicate","_object","_graph","toJSON","equals","quoted","blankNodePrefix","N3Parser","_contextStack","_setBase","baseIRI","initDataFactory","format","isTurtle","isTriG","isNTriples","isNQuads","isN3","isLineMode","_supportsNamedGraphs","_readPredicateOrNamedGraph","_readPredicate","_supportsQuads","_supportsRDFStar","_resolveRelativeIRI","_blankNodePrefix","_lexer","lexer","_explicitQuantifiers","explicitQuantifiers","fragmentPos","_base","_basePath","_baseRoot","_baseScheme","n3Mode","inverse","_inversePredicate","blankPrefix","_prefixes","quantified","_quantified","_error","_callback","_sparqlStyle","_readPrefix","_readBaseIRI","_readSubject","_readNamedGraphLabel","quantifier","_resolveIRI","_namedNode","_blankNode","_saveContext","_readBlankNodeHead","RDF_NIL","_readListItem","_readPunctuation","N3_FORSOME","_quantifier","_readQuantifierList","N3_FORALL","_literalValue","_completeSubjectLiteral","_literal","_readEntity","_getPathReader","ABBREVIATIONS","_readBlankNodeTail","_readObject","_readDataTypeOrLang","_getContextEndReader","_readGraph","_readBlankNodePunctuation","_emit","empty","_restoreContext","_readPredicateAfterBlank","list","previousList","stack","parent","RDF_FIRST","_readListItemDataTypeOrLang","RDF_REST","_completeObjectLiteral","_completeLiteral","listItem","completed","_readCallback","inversePredicate","_readFormulaTail","_readInTopContext","_readQuadPunctuation","_readPrefixIRI","prefixNode","_prefixCallback","_readDeclarationPunctuation","_readNamedGraphBlankLabel","entity","QUANTIFIERS_GRAPH","_readQuantifierPunctuation","afterPath","_afterPath","_readPath","_readForwardPath","_readBackwardPath","_readRDFStarTail","_quad","contextStack","_readRDFStarTailOrGraph","_removeDotSegments","result","pathStart","segmentStart","quadCallback","prefixCallback","quads","tokenize","every","parser","escape","escapeAll","escapedCharacters","SerializedTerm","N3Writer","outputStream","_prefixRegex","_lists","lists","_outputStream","_endStream","output","_writeQuad","_writeQuadLine","_baseIRI","_prefixIRIs","addPrefixes","_inDefaultGraph","_encodeIriOrBlank","_encodeObject","_encodePredicate","_encodeSubject","_prefixMatch","quadToString","_encodeQuad","startsWith","characterReplacer","prefixMatch","_encodeLiteral","addQuad","hasPrefixes","IRIlist","prefixList","prefixIRI","child","children","contents","elements","_blockedWrite","singleDone","character","N3Store","_size","_graphs","_id","_ids","_entities","_blankNodeIndex","_factory","addQuads","subjects","graphs","graphKey","subjectKey","predicateKey","index0","key0","key1","key2","index1","index2","existed","name0","name1","name2","tmp","entityKeys","value0","entity0","value1","entity1","values","parts","isString","uniqueIds","graphItem","predicates","objects","freeze","ids","entities","changed","_addToIndex","removeQuad","getQuads","_removeFromIndex","remove","removeMatches","subjectId","predicateId","objectId","_getGraphs","graphId","_findInIndex","DatasetCoreAndReadableStream","_countInIndex","some","results","forSubjects","_uniqueEntities","_loopBy2Keys","_loopByKey1","_loopByKey0","_loop","forPredicates","forObjects","o","forGraphs","g","suggestedName","ignoreErrors","onError","node","tails","toRemove","tailQuad","headPos","items","malformed","objectQuads","subjectQuads","removeQuads","n3Store","assign","_filtered","filtered","add","delete","has","N3StreamParser","onData","onEnd","parse","uri","N3StreamWriter","writer","_writer","addPrefix"],"mappings":"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","file":"static/js/3.8bd9a540.chunk.js","sourcesContent":["'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","const RDF  = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    XSD  = 'http://www.w3.org/2001/XMLSchema#',\n    SWAP = 'http://www.w3.org/2000/10/swap/';\n\nexport default {\n  xsd: {\n    decimal: `${XSD}decimal`,\n    boolean: `${XSD}boolean`,\n    double:  `${XSD}double`,\n    integer: `${XSD}integer`,\n    string:  `${XSD}string`,\n  },\n  rdf: {\n    type:       `${RDF}type`,\n    nil:        `${RDF}nil`,\n    first:      `${RDF}first`,\n    rest:       `${RDF}rest`,\n    langString: `${RDF}langString`,\n  },\n  owl: {\n    sameAs: 'http://www.w3.org/2002/07/owl#sameAs',\n  },\n  r: {\n    forSome: `${SWAP}reify#forSome`,\n    forAll:  `${SWAP}reify#forAll`,\n  },\n  log: {\n    implies: `${SWAP}log#implies`,\n  },\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// **N3Lexer** tokenizes N3 documents.\nimport namespaces from './IRIs';\nimport queueMicrotask from 'queue-microtask';\n\nconst { xsd } = namespaces;\n\n// Regular expression and replacement string to escape N3 strings\nconst escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\([^])/g;\nconst escapeReplacements = {\n  '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n  'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n  '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n  '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n  '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n};\nconst illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\nconst lineModeRegExps = {\n  _iri: true,\n  _unescapedIri: true,\n  _simpleQuotedString: true,\n  _langcode: true,\n  _blank: true,\n  _newline: true,\n  _comment: true,\n  _whitespace: true,\n  _endOfFile: true,\n};\nconst invalidRegExp = /$0^/;\n\n// ## Constructor\nexport default class N3Lexer {\n  constructor(options) {\n    // ## Regular expressions\n    // It's slightly faster to have these as properties than as in-scope variables\n    this._iri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/; // IRI with escape sequences; needs sanity check after unescaping\n    this._unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/; // IRI without escape sequences; no unescaping\n    this._simpleQuotedString = /^\"([^\"\\\\\\r\\n]*)\"(?=[^\"])/; // string without escape sequences\n    this._simpleApostropheString = /^'([^'\\\\\\r\\n]*)'(?=[^'])/;\n    this._langcode = /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i;\n    this._prefix = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/;\n    this._prefixed = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?:[ \\t]+|(?=\\.?[,;!\\^\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._variable = /^\\?(?:(?:[A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=[.,;!\\^\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._blank = /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?:[ \\t]+|(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._number = /^[\\-+]?(?:(\\d+\\.\\d*|\\.?\\d+)[eE][\\-+]?|\\d*(\\.)?)\\d+(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._boolean = /^(?:true|false)(?=[.,;\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._keyword = /^@[a-z]+(?=[\\s#<:])/i;\n    this._sparqlKeyword = /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<])/i;\n    this._shortPredicates = /^a(?=[\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._newline = /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/;\n    this._comment = /#([^\\n\\r]*)/;\n    this._whitespace = /^[ \\t]+/;\n    this._endOfFile = /^(?:#[^\\n\\r]*)?$/;\n    options = options || {};\n\n    // In line mode (N-Triples or N-Quads), only simple features may be parsed\n    if (this._lineMode = !!options.lineMode) {\n      this._n3Mode = false;\n      // Don't tokenize special literals\n      for (const key in this) {\n        if (!(key in lineModeRegExps) && this[key] instanceof RegExp)\n          this[key] = invalidRegExp;\n      }\n    }\n    // When not in line mode, enable N3 functionality by default\n    else {\n      this._n3Mode = options.n3 !== false;\n    }\n    // Don't output comment tokens by default\n    this._comments = !!options.comments;\n    // Cache the last tested closing position of long literals\n    this._literalClosingPos = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback\n  _tokenizeToEnd(callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually\n    let input = this._input;\n    const outputComments = this._comments;\n    while (true) {\n      // Count and skip whitespace lines\n      let whiteSpaceMatch, comment;\n      while (whiteSpaceMatch = this._newline.exec(input)) {\n        // Try to find a comment\n        if (outputComments && (comment = this._comment.exec(whiteSpaceMatch[0])))\n          callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n        // Advance the input\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n        this._line++;\n      }\n      // Skip whitespace on current line\n      if (!whiteSpaceMatch && (whiteSpaceMatch = this._whitespace.exec(input)))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF\n        if (inputFinished) {\n          // Try to find a final comment\n          if (outputComments && (comment = this._comment.exec(input)))\n            callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n        }\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character\n      const line = this._line, firstChar = input[0];\n      let type = '', value = '', prefix = '',\n          match = null, matchLength = 0, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // We need at least 3 tokens lookahead to distinguish ^^<IRI> and ^^pre:fixed\n        if (input.length < 3)\n          break;\n        // Try to match a type\n        else if (input[1] === '^') {\n          this._previousMarker = '^^';\n          // Move to type IRI or prefixed name\n          input = input.substr(2);\n          if (input[0] !== '<') {\n            inconclusive = true;\n            break;\n          }\n        }\n        // If no type, it must be a path expression\n        else {\n          if (this._n3Mode) {\n            matchLength = 1;\n            type = '^';\n          }\n          break;\n        }\n        // Fall through in case the type is an IRI\n      case '<':\n        // Try to find a full IRI without escape sequences\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences\n        else if (match = this._iri.exec(input)) {\n          value = this._unescape(match[1]);\n          if (value === null || illegalIriChars.test(value))\n            return reportSyntaxError(this);\n          type = 'IRI';\n        }\n        // Try to find a nested triple\n        else if (input.length > 1 && input[1] === '<')\n          type = '<<', matchLength = 2;\n        // Try to find a backwards implication arrow\n        else if (this._n3Mode && input.length > 1 && input[1] === '=')\n          type = 'inverse', matchLength = 2, value = '>';\n        break;\n\n      case '>':\n        if (input.length > 1 && input[1] === '>')\n          type = '>>', matchLength = 2;\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a blank node.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(`${input} `)))\n          type = 'blank', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n        // Try to find a literal without escape sequences\n        if (match = this._simpleQuotedString.exec(input))\n          value = match[1];\n        // Try to find a literal wrapped in three pairs of quotes\n        else {\n          ({ value, matchLength } = this._parseLiteral(input));\n          if (value === null)\n            return reportSyntaxError(this);\n        }\n        if (match !== null || matchLength !== 0) {\n          type = 'literal';\n          this._literalClosingPos = 0;\n        }\n        break;\n\n      case \"'\":\n        if (!this._lineMode) {\n          // Try to find a literal without escape sequences\n          if (match = this._simpleApostropheString.exec(input))\n            value = match[1];\n          // Try to find a literal wrapped in three pairs of quotes\n          else {\n            ({ value, matchLength } = this._parseLiteral(input));\n            if (value === null)\n              return reportSyntaxError(this);\n          }\n          if (match !== null || matchLength !== 0) {\n            type = 'literal';\n            this._literalClosingPos = 0;\n          }\n        }\n        break;\n\n      case '?':\n        // Try to find a variable\n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n        break;\n\n      case '@':\n        // Try to find a language code\n        if (this._previousMarker === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot)\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a number.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if (match = this._number.exec(input) ||\n            inputFinished && (match = this._number.exec(`${input} `))) {\n          type = 'literal', value = match[0];\n          prefix = (typeof match[1] === 'string' ? xsd.double :\n                    (typeof match[2] === 'string' ? xsd.decimal : xsd.integer));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = match[0], prefix = xsd.boolean;\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'a';\n        else\n          inconclusive = true;\n        break;\n\n      case '=':\n        // Try to find an implication arrow or equals sign\n        if (this._n3Mode && input.length > 1) {\n          type = 'abbreviation';\n          if (input[1] !== '>')\n            matchLength = 1, value = '=';\n          else\n            matchLength = 2, value = '>';\n        }\n        break;\n\n      case '!':\n        if (!this._n3Mode)\n          break;\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        if (!this._lineMode) {\n          matchLength = 1;\n          type = firstChar;\n        }\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more\n      if (inconclusive) {\n        // Try to find a prefix\n        if ((this._previousMarker === '@prefix' || this._previousMarker === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(`${input} `)))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read\n      if (this._previousMarker === '^^') {\n        switch (type) {\n        case 'prefixed': type = 'type';    break;\n        case 'IRI':      type = 'typeIRI'; break;\n        default:         type = '';\n        }\n      }\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token\n      const token = { line: line, type: type, value: value, prefix: prefix };\n      callback(null, token);\n      this.previousToken = token;\n      this._previousMarker = type;\n      // Advance to next part to tokenize\n      input = input.substr(matchLength || match[0].length, input.length);\n    }\n\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  }\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters\n  _unescape(item) {\n    let invalid = false;\n    const replaced = item.replace(escapeSequence, (sequence, unicode4, unicode8, escapedChar) => {\n      // 4-digit unicode character\n      if (typeof unicode4 === 'string')\n        return String.fromCharCode(Number.parseInt(unicode4, 16));\n      // 8-digit unicode character\n      if (typeof unicode8 === 'string') {\n        let charCode = Number.parseInt(unicode8, 16);\n        return charCode <= 0xFFFF ? String.fromCharCode(Number.parseInt(unicode8, 16)) :\n          String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n      }\n      // fixed escape sequence\n      if (escapedChar in escapeReplacements)\n        return escapeReplacements[escapedChar];\n      // invalid escape sequence\n      invalid = true;\n      return '';\n    });\n    return invalid ? null : replaced;\n  }\n\n  // ### `_parseLiteral` parses a literal into an unescaped value\n  _parseLiteral(input) {\n    // Ensure we have enough lookahead to identify triple-quoted strings\n    if (input.length >= 3) {\n      // Identify the opening quote(s)\n      const opening = input.match(/^(?:\"\"\"|\"|'''|'|)/)[0];\n      const openingLength = opening.length;\n\n      // Find the next candidate closing quotes\n      let closingPos = Math.max(this._literalClosingPos, openingLength);\n      while ((closingPos = input.indexOf(opening, closingPos)) > 0) {\n        // Count backslashes right before the closing quotes\n        let backslashCount = 0;\n        while (input[closingPos - backslashCount - 1] === '\\\\')\n          backslashCount++;\n\n        // An even number of backslashes (in particular 0)\n        // means these are actual, non-escaped closing quotes\n        if (backslashCount % 2 === 0) {\n          // Extract and unescape the value\n          const raw = input.substring(openingLength, closingPos);\n          const lines = raw.split(/\\r\\n|\\r|\\n/).length - 1;\n          const matchLength = closingPos + openingLength;\n          // Only triple-quoted strings can be multi-line\n          if (openingLength === 1 && lines !== 0 ||\n              openingLength === 3 && this._lineMode)\n            break;\n          this._line += lines;\n          return { value: this._unescape(raw), matchLength };\n        }\n        closingPos++;\n      }\n      this._literalClosingPos = input.length - openingLength + 1;\n    }\n    return { value: '', matchLength: 0 };\n  }\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError(issue) {\n    this._input = null;\n    const err = new Error(`Unexpected \"${issue}\" on line ${this._line}.`);\n    err.context = {\n      token: undefined,\n      line: this._line,\n      previousToken: this.previousToken,\n    };\n    return err;\n  }\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize(input, callback) {\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end\n    if (typeof input === 'string') {\n      this._input = input;\n      // If a callback was passed, asynchronously call it\n      if (typeof callback === 'function')\n        queueMicrotask(() => this._tokenizeToEnd(callback, true));\n      // If no callback was passed, tokenize synchronously and return\n      else {\n        const tokens = [];\n        let error;\n        this._tokenizeToEnd((e, t) => e ? (error = e) : tokens.push(t), true);\n        if (error) throw error;\n        return tokens;\n      }\n    }\n    // Otherwise, the input must be a stream\n    else {\n      this._input = '';\n      this._pendingBuffer = null;\n      if (typeof input.setEncoding === 'function')\n        input.setEncoding('utf8');\n      // Adds the data chunk to the buffer and parses as far as possible\n      input.on('data', data => {\n        if (this._input !== null && data.length !== 0) {\n          // Prepend any previous pending writes\n          if (this._pendingBuffer) {\n            data = Buffer.concat([this._pendingBuffer, data]);\n            this._pendingBuffer = null;\n          }\n          // Hold if the buffer ends in an incomplete unicode sequence\n          if (data[data.length - 1] & 0x80) {\n            this._pendingBuffer = data;\n          }\n          // Otherwise, tokenize as far as possible\n          else {\n            this._input += data;\n            this._tokenizeToEnd(callback, false);\n          }\n        }\n      });\n      // Parses until the end\n      input.on('end', () => {\n        if (this._input !== null)\n          this._tokenizeToEnd(callback, true);\n      });\n      input.on('error', callback);\n    }\n  }\n}\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","module.exports = require('events').EventEmitter;\n","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(globalThis)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","// **N3Util** provides N3 utility functions.\n\nimport N3DataFactory from './N3DataFactory';\n\n// Tests whether the given term represents an IRI\nexport function isNamedNode(term) {\n  return !!term && term.termType === 'NamedNode';\n}\n\n// Tests whether the given term represents a blank node\nexport function isBlankNode(term) {\n  return !!term && term.termType === 'BlankNode';\n}\n\n// Tests whether the given term represents a literal\nexport function isLiteral(term) {\n  return !!term && term.termType === 'Literal';\n}\n\n// Tests whether the given term represents a variable\nexport function isVariable(term) {\n  return !!term && term.termType === 'Variable';\n}\n\n// Tests whether the given term represents the default graph\nexport function isDefaultGraph(term) {\n  return !!term && term.termType === 'DefaultGraph';\n}\n\n// Tests whether the given quad is in the default graph\nexport function inDefaultGraph(quad) {\n  return isDefaultGraph(quad.graph);\n}\n\n// Creates a function that prepends the given IRI to a local name\nexport function prefix(iri, factory) {\n  return prefixes({ '': iri }, factory)('');\n}\n\n// Creates a function that allows registering and expanding prefixes\nexport function prefixes(defaultPrefixes, factory) {\n  // Add all of the default prefixes\n  const prefixes = Object.create(null);\n  for (const prefix in defaultPrefixes)\n    processPrefix(prefix, defaultPrefixes[prefix]);\n  // Set the default factory if none was specified\n  factory = factory || N3DataFactory;\n\n  // Registers a new prefix (if an IRI was specified)\n  // or retrieves a function that expands an existing prefix (if no IRI was specified)\n  function processPrefix(prefix, iri) {\n    // Create a new prefix if an IRI is specified or the prefix doesn't exist\n    if (typeof iri === 'string') {\n      // Create a function that expands the prefix\n      const cache = Object.create(null);\n      prefixes[prefix] = local => {\n        return cache[local] || (cache[local] = factory.namedNode(iri + local));\n      };\n    }\n    else if (!(prefix in prefixes)) {\n      throw new Error(`Unknown prefix: ${prefix}`);\n    }\n    return prefixes[prefix];\n  }\n  return processPrefix;\n}\n","// N3.js implementations of the RDF/JS core data types\n// See https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md\n\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\nconst { rdf, xsd } = namespaces;\n\n// eslint-disable-next-line prefer-const\nlet DEFAULTGRAPH;\nlet _blankNodeCounter = 0;\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/;\nconst quadId = /^<<(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) ?(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+)?>>$/;\n\n// ## DataFactory singleton\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  variable,\n  literal,\n  defaultGraph,\n  quad,\n  triple: quad,\n};\nexport default DataFactory;\n\n// ## Term constructor\nexport class Term {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // ### The value of this term\n  get value() {\n    return this.id;\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Term)\n      return this.id === other.id;\n    // Otherwise, compare term type and value\n    return !!other && this.termType === other.termType &&\n                      this.value    === other.value;\n  }\n\n  // ### Returns a plain object representation of this term\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n    };\n  }\n}\n\n\n// ## NamedNode constructor\nexport class NamedNode extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'NamedNode';\n  }\n}\n\n// ## Literal constructor\nexport class Literal extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'Literal';\n  }\n\n  // ### The text value of this literal\n  get value() {\n    return this.id.substring(1, this.id.lastIndexOf('\"'));\n  }\n\n  // ### The language of this literal\n  get language() {\n    // Find the last quotation mark (e.g., '\"abc\"@en-us')\n    const id = this.id;\n    let atPos = id.lastIndexOf('\"') + 1;\n    // If \"@\" it follows, return the remaining substring; empty otherwise\n    return atPos < id.length && id[atPos++] === '@' ? id.substr(atPos).toLowerCase() : '';\n  }\n\n  // ### The datatype IRI of this literal\n  get datatype() {\n    return new NamedNode(this.datatypeString);\n  }\n\n  // ### The datatype string of this literal\n  get datatypeString() {\n    // Find the last quotation mark (e.g., '\"abc\"^^http://ex.org/types#t')\n    const id = this.id, dtPos = id.lastIndexOf('\"') + 1;\n    const char = dtPos < id.length ? id[dtPos] : '';\n    // If \"^\" it follows, return the remaining substring\n    return char === '^' ? id.substr(dtPos + 2) :\n           // If \"@\" follows, return rdf:langString; xsd:string otherwise\n           (char !== '@' ? xsd.string : rdf.langString);\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both literals were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Literal)\n      return this.id === other.id;\n    // Otherwise, compare term type, value, language, and datatype\n    return !!other && !!other.datatype &&\n                      this.termType === other.termType &&\n                      this.value    === other.value    &&\n                      this.language === other.language &&\n                      this.datatype.value === other.datatype.value;\n  }\n\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n      language: this.language,\n      datatype: { termType: 'NamedNode', value: this.datatypeString },\n    };\n  }\n}\n\n// ## BlankNode constructor\nexport class BlankNode extends Term {\n  constructor(name) {\n    super(`_:${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'BlankNode';\n  }\n\n  // ### The name of this blank node\n  get value() {\n    return this.id.substr(2);\n  }\n}\n\nexport class Variable extends Term {\n  constructor(name) {\n    super(`?${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Variable';\n  }\n\n  // ### The name of this variable\n  get value() {\n    return this.id.substr(1);\n  }\n}\n\n// ## DefaultGraph constructor\nexport class DefaultGraph extends Term {\n  constructor() {\n    super('');\n    return DEFAULTGRAPH || this;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'DefaultGraph';\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through strict equality;\n    // otherwise, compare term types.\n    return (this === other) || (!!other && (this.termType === other.termType));\n  }\n}\n\n// ## DefaultGraph singleton\nDEFAULTGRAPH = new DefaultGraph();\n\n\n// ### Constructs a term from the given internal string ID\nexport function termFromId(id, factory) {\n  factory = factory || DataFactory;\n\n  // Falsy value or empty string indicate the default graph\n  if (!id)\n    return factory.defaultGraph();\n\n  // Identify the term type based on the first character\n  switch (id[0]) {\n  case '?':\n    return factory.variable(id.substr(1));\n  case '_':\n    return factory.blankNode(id.substr(2));\n  case '\"':\n    // Shortcut for internal literals\n    if (factory === DataFactory)\n      return new Literal(id);\n    // Literal without datatype or language\n    if (id[id.length - 1] === '\"')\n      return factory.literal(id.substr(1, id.length - 2));\n    // Literal with datatype or language\n    const endPos = id.lastIndexOf('\"', id.length - 1);\n    return factory.literal(id.substr(1, endPos - 1),\n            id[endPos + 1] === '@' ? id.substr(endPos + 2)\n                                   : factory.namedNode(id.substr(endPos + 3)));\n  case '<':\n    const components = quadId.exec(id);\n    return factory.quad(\n      termFromId(unescapeQuotes(components[1]), factory),\n      termFromId(unescapeQuotes(components[2]), factory),\n      termFromId(unescapeQuotes(components[3]), factory),\n      components[4] && termFromId(unescapeQuotes(components[4]), factory)\n    );\n  default:\n    return factory.namedNode(id);\n  }\n}\n\n// ### Constructs an internal string ID from the given term or ID string\nexport function termToId(term) {\n  if (typeof term === 'string')\n    return term;\n  if (term instanceof Term && term.termType !== 'Quad')\n    return term.id;\n  if (!term)\n    return DEFAULTGRAPH.id;\n\n  // Term instantiated with another library\n  switch (term.termType) {\n  case 'NamedNode':    return term.value;\n  case 'BlankNode':    return `_:${term.value}`;\n  case 'Variable':     return `?${term.value}`;\n  case 'DefaultGraph': return '';\n  case 'Literal':      return `\"${term.value}\"${\n    term.language ? `@${term.language}` :\n      (term.datatype && term.datatype.value !== xsd.string ? `^^${term.datatype.value}` : '')}`;\n  case 'Quad':\n    // To identify RDF* quad components, we escape quotes by doubling them.\n    // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n    return `<<${\n        escapeQuotes(termToId(term.subject))\n      } ${\n        escapeQuotes(termToId(term.predicate))\n      } ${\n        escapeQuotes(termToId(term.object))\n      }${\n        (isDefaultGraph(term.graph)) ? '' : ` ${termToId(term.graph)}`\n      }>>`;\n  default: throw new Error(`Unexpected termType: ${term.termType}`);\n  }\n}\n\n\n// ## Quad constructor\nexport class Quad extends Term {\n  constructor(subject, predicate, object, graph) {\n    super('');\n    this._subject   = subject;\n    this._predicate = predicate;\n    this._object    = object;\n    this._graph     = graph || DEFAULTGRAPH;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Quad';\n  }\n\n  get subject() {\n    return this._subject;\n  }\n\n  get predicate() {\n    return this._predicate;\n  }\n\n  get object() {\n    return this._object;\n  }\n\n  get graph() {\n    return this._graph;\n  }\n\n  // ### Returns a plain object representation of this quad\n  toJSON() {\n    return {\n      termType:  this.termType,\n      subject:   this._subject.toJSON(),\n      predicate: this._predicate.toJSON(),\n      object:    this._object.toJSON(),\n      graph:     this._graph.toJSON(),\n    };\n  }\n\n  // ### Returns whether this object represents the same quad as the other\n  equals(other) {\n    return !!other && this._subject.equals(other.subject)     &&\n                      this._predicate.equals(other.predicate) &&\n                      this._object.equals(other.object)       &&\n                      this._graph.equals(other.graph);\n  }\n}\nexport { Quad as Triple };\n\n// ### Escapes the quotes within the given literal\nexport function escapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`);\n}\n\n// ### Unescapes the quotes within the given literal\nexport function unescapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"\"/g, '\"')}`);\n}\n\n// ### Creates an IRI\nfunction namedNode(iri) {\n  return new NamedNode(iri);\n}\n\n// ### Creates a blank node\nfunction blankNode(name) {\n  return new BlankNode(name || `n3-${_blankNodeCounter++}`);\n}\n\n// ### Creates a literal\nfunction literal(value, languageOrDataType) {\n  // Create a language-tagged string\n  if (typeof languageOrDataType === 'string')\n    return new Literal(`\"${value}\"@${languageOrDataType.toLowerCase()}`);\n\n  // Automatically determine datatype for booleans and numbers\n  let datatype = languageOrDataType ? languageOrDataType.value : '';\n  if (datatype === '') {\n    // Convert a boolean\n    if (typeof value === 'boolean')\n      datatype = xsd.boolean;\n    // Convert an integer or double\n    else if (typeof value === 'number') {\n      if (Number.isFinite(value))\n        datatype = Number.isInteger(value) ? xsd.integer : xsd.double;\n      else {\n        datatype = xsd.double;\n        if (!Number.isNaN(value))\n          value = value > 0 ? 'INF' : '-INF';\n      }\n    }\n  }\n\n  // Create a datatyped literal\n  return (datatype === '' || datatype === xsd.string) ?\n    new Literal(`\"${value}\"`) :\n    new Literal(`\"${value}\"^^${datatype}`);\n}\n\n// ### Creates a variable\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// ### Returns the default graph\nfunction defaultGraph() {\n  return DEFAULTGRAPH;\n}\n\n// ### Creates a quad\nfunction quad(subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph);\n}\n","// **N3Parser** parses N3 documents.\nimport N3Lexer from './N3Lexer';\nimport N3DataFactory from './N3DataFactory';\nimport namespaces from './IRIs';\n\nlet blankNodePrefix = 0;\n\n// ## Constructor\nexport default class N3Parser {\n  constructor(options) {\n    this._contextStack = [];\n    this._graph = null;\n\n    // Set the document IRI\n    options = options || {};\n    this._setBase(options.baseIRI);\n    options.factory && initDataFactory(this, options.factory);\n\n    // Set supported features depending on the format\n    const format = (typeof options.format === 'string') ?\n                 options.format.match(/\\w*$/)[0].toLowerCase() : '',\n        isTurtle = /turtle/.test(format), isTriG = /trig/.test(format),\n        isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n        isN3 = this._n3Mode = /n3/.test(format),\n        isLineMode = isNTriples || isNQuads;\n    if (!(this._supportsNamedGraphs = !(isTurtle || isN3)))\n      this._readPredicateOrNamedGraph = this._readPredicate;\n    // Support triples in other graphs\n    this._supportsQuads = !(isTurtle || isTriG || isNTriples || isN3);\n    // Support nesting of triples\n    this._supportsRDFStar = format === '' || /star|\\*$/.test(format);\n    // Disable relative IRIs in N-Triples or N-Quads mode\n    if (isLineMode)\n      this._resolveRelativeIRI = iri => { return null; };\n    this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                              options.blankNodePrefix.replace(/^(?!_:)/, '_:');\n    this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode, n3: isN3 });\n    // Disable explicit quantifiers by default\n    this._explicitQuantifiers = !!options.explicitQuantifiers;\n  }\n\n  // ## Static class methods\n\n  // ### `_resetBlankNodePrefix` restarts blank node prefix identification\n  static _resetBlankNodePrefix() {\n    blankNodePrefix = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs\n  _setBase(baseIRI) {\n    if (!baseIRI) {\n      this._base = '';\n      this._basePath = '';\n    }\n    else {\n      // Remove fragment if present\n      const fragmentPos = baseIRI.indexOf('#');\n      if (fragmentPos >= 0)\n        baseIRI = baseIRI.substr(0, fragmentPos);\n      // Set base IRI and its components\n      this._base = baseIRI;\n      this._basePath   = baseIRI.indexOf('/') < 0 ? baseIRI :\n                         baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  }\n\n  // ### `_saveContext` stores the current parsing context\n  // when entering a new scope (list, blank node, formula)\n  _saveContext(type, graph, subject, predicate, object) {\n    const n3Mode = this._n3Mode;\n    this._contextStack.push({\n      subject: subject, predicate: predicate, object: object,\n      graph: graph, type: type,\n      inverse: n3Mode ? this._inversePredicate : false,\n      blankPrefix: n3Mode ? this._prefixes._ : '',\n      quantified: n3Mode ? this._quantified : null,\n    });\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      // Every new scope resets the predicate direction\n      this._inversePredicate = false;\n      // In N3, blank nodes are scoped to a formula\n      // (using a dot as separator, as a blank node label cannot start with it)\n      this._prefixes._ = (this._graph ? `${this._graph.id.substr(2)}.` : '.');\n      // Quantifiers are scoped to a formula\n      this._quantified = Object.create(this._quantified);\n    }\n  }\n\n  // ### `_restoreContext` restores the parent context\n  // when leaving a scope (list, blank node, formula)\n  _restoreContext() {\n    const context = this._contextStack.pop(), n3Mode = this._n3Mode;\n    this._subject   = context.subject;\n    this._predicate = context.predicate;\n    this._object    = context.object;\n    this._graph     = context.graph;\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      this._inversePredicate = context.inverse;\n      this._prefixes._ = context.blankPrefix;\n      this._quantified = context.quantified;\n    }\n  }\n\n  // ### `_readInTopContext` reads a token when in the top context\n  _readInTopContext(token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration\n    case 'PREFIX':\n      this._sparqlStyle = true;\n    case '@prefix':\n      return this._readPrefix;\n    // It could be a base declaration\n    case 'BASE':\n      this._sparqlStyle = true;\n    case '@base':\n      return this._readBaseIRI;\n    // It could be a graph\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject\n    default:\n      return this._readSubject(token);\n    }\n  }\n\n  // ### `_readEntity` reads an IRI, prefixed name, blank node, or variable\n  _readEntity(token, quantifier) {\n    let value;\n    switch (token.type) {\n    // Read a relative or absolute IRI\n    case 'IRI':\n    case 'typeIRI':\n      const iri = this._resolveIRI(token.value);\n      if (iri === null)\n        return this._error('Invalid IRI', token);\n      value = this._namedNode(iri);\n      break;\n    // Read a prefixed name\n    case 'type':\n    case 'prefixed':\n      const prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error(`Undefined prefix \"${token.prefix}:\"`, token);\n      value = this._namedNode(prefix + token.value);\n      break;\n    // Read a blank node\n    case 'blank':\n      value = this._blankNode(this._prefixes[token.prefix] + token.value);\n      break;\n    // Read a variable\n    case 'var':\n      value = this._variable(token.value.substr(1));\n      break;\n    // Everything else is not an entity\n    default:\n      return this._error(`Expected entity but got ${token.type}`, token);\n    }\n    // In N3 mode, replace the entity if it is quantified\n    if (!quantifier && this._n3Mode && (value.id in this._quantified))\n      value = this._quantified[value.id];\n    return value;\n  }\n\n  // ### `_readSubject` reads a quad's subject\n  _readSubject(token) {\n    this._predicate = null;\n    switch (token.type) {\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph,\n                        this._subject = this._blankNode(), null, null);\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this.RDF_NIL, null, null);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph,\n                        this._graph = this._blankNode(), null, null);\n      return this._readSubject;\n    case '}':\n       // No subject; the graph in which we are reading is closed instead\n      return this._readPunctuation(token);\n    case '@forSome':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forSome\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORSOME;\n      this._quantifier = this._blankNode;\n      return this._readQuantifierList;\n    case '@forAll':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forAll\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORALL;\n      this._quantifier = this._variable;\n      return this._readQuantifierList;\n    case 'literal':\n      if (!this._n3Mode)\n        return this._error('Unexpected literal', token);\n\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._completeSubjectLiteral;\n      }\n      else\n        this._subject = this._literal(token.value, this._namedNode(token.prefix));\n\n      break;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, null, null, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the subject entity\n      if ((this._subject = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the subject might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._readPredicateOrNamedGraph);\n    }\n\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // ### `_readPredicate` reads a quad's predicate\n  _readPredicate(token) {\n    const type = token.type;\n    switch (type) {\n    case 'inverse':\n      this._inversePredicate = true;\n    case 'abbreviation':\n      this._predicate = this.ABBREVIATIONS[token.value];\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon\n      if (this._predicate === null)\n        return this._error(`Unexpected ${type}`, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Additional semicolons can be safely ignored\n      return this._predicate !== null ? this._readPredicate :\n             this._error('Expected predicate but got ;', token);\n    case 'blank':\n      if (!this._n3Mode)\n        return this._error('Disallowed blank node as predicate', token);\n    default:\n      if ((this._predicate = this._readEntity(token)) === undefined)\n        return;\n    }\n    // The next token must be an object\n    return this._readObject;\n  }\n\n  // ### `_readObject` reads a quad's object\n  _readObject(token) {\n    switch (token.type) {\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._readDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else\n        this._object = this._literal(token.value, this._namedNode(token.prefix));\n      break;\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph, this._subject, this._predicate,\n                        this._subject = this._blankNode());\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this._subject, this._predicate, this.RDF_NIL);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, this._subject, this._predicate, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the object entity\n      if ((this._object = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the object might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._getContextEndReader());\n    }\n    return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateOrNamedGraph` reads a quad's predicate, or a named graph\n  _readPredicateOrNamedGraph(token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  }\n\n  // ### `_readGraph` reads a graph\n  _readGraph(token) {\n    if (token.type !== '{')\n      return this._error(`Expected graph but got ${token.type}`, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  }\n\n  // ### `_readBlankNodeHead` reads the head of a blank node\n  _readBlankNodeHead(token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readBlankNodeTail` reads the end of a blank node\n  _readBlankNodeTail(token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node quad\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this blank node\n    const empty = this._predicate === null;\n    this._restoreContext();\n    // If the blank node was the subject, continue reading the predicate\n    if (this._object === null)\n      // If the blank node was empty, it could be a named graph label\n      return empty ? this._readPredicateOrNamedGraph : this._readPredicateAfterBlank;\n    // If the blank node was the object, restore previous context and read punctuation\n    else\n      return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateAfterBlank` reads a predicate after an anonymous blank node\n  _readPredicateAfterBlank(token) {\n    switch (token.type) {\n    case '.':\n    case '}':\n      // No predicate is coming if the triple is terminated here\n      this._subject = null;\n      return this._readPunctuation(token);\n    default:\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readListItem` reads items from a list\n  _readListItem(token) {\n    let item = null,                      // The item of the list\n        list = null,                      // The list itself\n        next = this._readListItem;        // The next function to execute\n    const previousList = this._subject,   // The previous list that contains this list\n        stack = this._contextStack,       // The stack of parent contexts\n        parent = stack[stack.length - 1]; // The parent containing the current list\n\n    switch (token.type) {\n    case '[':\n      // Stack the current list quad and start a new quad with a blank node as subject\n      this._saveContext('blank', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST,\n                        this._subject = item = this._blankNode());\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list quad and start a new list\n      this._saveContext('list', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST, this.RDF_NIL);\n      this._subject = null;\n      break;\n    case ')':\n      // Closing the list; restore the parent context\n      this._restoreContext();\n      // If this list is contained within a parent list, return the membership quad here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._emit(this._subject, this._predicate, this._object, this._graph);\n      // Was this list the parent's subject?\n      if (this._predicate === null) {\n        // The next token is the predicate\n        next = this._readPredicate;\n        // No list tail if this was an empty list\n        if (this._subject === this.RDF_NIL)\n          return next;\n      }\n      // The list was in the parent context's object\n      else {\n        next = this._getContextEndReader();\n        // No list tail if this was an empty list\n        if (this._object === this.RDF_NIL)\n          return next;\n      }\n      // Close the list by making the head nil\n      list = this.RDF_NIL;\n      break;\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        next = this._readListItemDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else {\n        item = this._literal(token.value, this._namedNode(token.prefix));\n        next = this._getContextEndReader();\n      }\n      break;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    default:\n      if ((item = this._readEntity(token)) === undefined)\n        return;\n    }\n\n     // Create a new blank node if no item head was assigned yet\n    if (list === null)\n      this._subject = list = this._blankNode();\n\n    // Is this the first element of the list?\n    if (previousList === null) {\n      // This list is either the subject or the object of its parent\n      if (parent.predicate === null)\n        parent.subject = list;\n      else\n        parent.object = list;\n    }\n    else {\n      // Continue the previous list with the current list\n      this._emit(previousList, this.RDF_REST, list, this._graph);\n    }\n    // If an item was read, add it to the list\n    if (item !== null) {\n      // In N3 mode, the item might be a path\n      if (this._n3Mode && (token.type === 'IRI' || token.type === 'prefixed')) {\n        // Create a new context to add the item's path\n        this._saveContext('item', this._graph, list, this.RDF_FIRST, item);\n        this._subject = item, this._predicate = null;\n        // _readPath will restore the context and output the item\n        return this._getPathReader(this._readListItem);\n      }\n      // Output the item\n      this._emit(list, this.RDF_FIRST, item, this._graph);\n    }\n    return next;\n  }\n\n  // ### `_readDataTypeOrLang` reads an _optional_ datatype or language\n  _readDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, false);\n  }\n\n\n  // ### `_readListItemDataTypeOrLang` reads an _optional_ datatype or language in a list\n  _readListItemDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, true);\n  }\n\n  // ### `_completeLiteral` completes a literal with an optional datatype or language\n  _completeLiteral(token) {\n    // Create a simple string literal by default\n    let literal = this._literal(this._literalValue);\n\n    switch (token.type) {\n    // Create a datatyped literal\n    case 'type':\n    case 'typeIRI':\n      const datatype = this._readEntity(token);\n      if (datatype === undefined) return; // No datatype means an error occurred\n      literal = this._literal(this._literalValue, datatype);\n      token = null;\n      break;\n    // Create a language-tagged string\n    case 'langcode':\n      literal = this._literal(this._literalValue, token.value);\n      token = null;\n      break;\n    }\n\n    return { token, literal };\n  }\n\n  // Completes a literal in subject position\n  _completeSubjectLiteral(token) {\n    this._subject = this._completeLiteral(token).literal;\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // Completes a literal in object position\n  _completeObjectLiteral(token, listItem) {\n    const completed = this._completeLiteral(token);\n    if (!completed)\n      return;\n    this._object = completed.literal;\n\n    // If this literal was part of a list, write the item\n    // (we could also check the context stack, but passing in a flag is faster)\n    if (listItem)\n      this._emit(this._subject, this.RDF_FIRST, this._object, this._graph);\n    // If the token was consumed, continue with the rest of the input\n    if (completed.token === null)\n      return this._getContextEndReader();\n    // Otherwise, consume the token now\n    else {\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(completed.token);\n    }\n  }\n\n  // ### `_readFormulaTail` reads the end of a formula\n  _readFormulaTail(token) {\n    if (token.type !== '}')\n      return this._readPunctuation(token);\n\n    // Store the last quad of the formula\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this formula\n    this._restoreContext();\n    // If the formula was the subject, continue reading the predicate.\n    // If the formula was the object, read punctuation.\n    return this._object === null ? this._readPredicate : this._getContextEndReader();\n  }\n\n  // ### `_readPunctuation` reads punctuation between quads or quad parts\n  _readPunctuation(token) {\n    let next, graph = this._graph;\n    const subject = this._subject, inversePredicate = this._inversePredicate;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      if (this._n3Mode)\n        return this._readFormulaTail(token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next\n    case '.':\n      this._subject = null;\n      next = this._contextStack.length ? this._readSubject : this._readInTopContext;\n      if (inversePredicate) this._inversePredicate = false;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (graph = this._readEntity(token)) !== undefined) {\n        next = this._readQuadPunctuation;\n        break;\n      }\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    if (subject !== null) {\n      const predicate = this._predicate, object = this._object;\n      if (!inversePredicate)\n        this._emit(subject, predicate, object,  graph);\n      else\n        this._emit(object,  predicate, subject, graph);\n    }\n    return next;\n  }\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation(token) {\n    let next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    this._emit(this._subject, this._predicate, this._object, this._graph);\n    return next;\n  }\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad\n  _readQuadPunctuation(token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  }\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration\n  _readPrefix(token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  }\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration\n  _readPrefixIRI(token) {\n    if (token.type !== 'IRI')\n      return this._error(`Expected IRI to follow prefix \"${this._prefix}:\"`, token);\n    const prefixNode = this._readEntity(token);\n    this._prefixes[this._prefix] = prefixNode.value;\n    this._prefixCallback(this._prefix, prefixNode);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration\n  _readBaseIRI(token) {\n    const iri = token.type === 'IRI' && this._resolveIRI(token.value);\n    if (!iri)\n      return this._error('Expected valid IRI to follow base declaration', token);\n    this._setBase(iri);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph\n  _readNamedGraphLabel(token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'blank':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  }\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph\n  _readNamedGraphBlankLabel(token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = this._blankNode();\n    return this._readGraph;\n  }\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration\n  _readDeclarationPunctuation(token) {\n    // SPARQL-style declarations don't have punctuation\n    if (this._sparqlStyle) {\n      this._sparqlStyle = false;\n      return this._readInTopContext(token);\n    }\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  }\n\n  // Reads a list of quantified symbols from a @forSome or @forAll statement\n  _readQuantifierList(token) {\n    let entity;\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      if ((entity = this._readEntity(token, true)) !== undefined)\n        break;\n    default:\n      return this._error(`Unexpected ${token.type}`, token);\n    }\n    // Without explicit quantifiers, map entities to a quantified entity\n    if (!this._explicitQuantifiers)\n      this._quantified[entity.id] = this._quantifier(this._blankNode().value);\n    // With explicit quantifiers, output the reified quantifier\n    else {\n      // If this is the first item, start a new quantifier list\n      if (this._subject === null)\n        this._emit(this._graph || this.DEFAULTGRAPH, this._predicate,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Otherwise, continue the previous list\n      else\n        this._emit(this._subject, this.RDF_REST,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Output the list item\n      this._emit(this._subject, this.RDF_FIRST, entity, this.QUANTIFIERS_GRAPH);\n    }\n    return this._readQuantifierPunctuation;\n  }\n\n  // Reads punctuation from a @forSome or @forAll statement\n  _readQuantifierPunctuation(token) {\n    // Read more quantifiers\n    if (token.type === ',')\n      return this._readQuantifierList;\n    // End of the quantifier list\n    else {\n      // With explicit quantifiers, close the quantifier list\n      if (this._explicitQuantifiers) {\n        this._emit(this._subject, this.RDF_REST, this.RDF_NIL, this.QUANTIFIERS_GRAPH);\n        this._subject = null;\n      }\n      // Read a dot\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(token);\n    }\n  }\n\n  // ### `_getPathReader` reads a potential path and then resumes with the given function\n  _getPathReader(afterPath) {\n    this._afterPath = afterPath;\n    return this._readPath;\n  }\n\n  // ### `_readPath` reads a potential path\n  _readPath(token) {\n    switch (token.type) {\n    // Forward path\n    case '!': return this._readForwardPath;\n    // Backward path\n    case '^': return this._readBackwardPath;\n    // Not a path; resume reading where we left off\n    default:\n      const stack = this._contextStack, parent = stack.length && stack[stack.length - 1];\n      // If we were reading a list item, we still need to output it\n      if (parent && parent.type === 'item') {\n        // The list item is the remaining subejct after reading the path\n        const item = this._subject;\n        // Switch back to the context of the list\n        this._restoreContext();\n        // Output the list item\n        this._emit(this._subject, this.RDF_FIRST, item, this._graph);\n      }\n      return this._afterPath(token);\n    }\n  }\n\n  // ### `_readForwardPath` reads a '!' path\n  _readForwardPath(token) {\n    let subject, predicate;\n    const object = this._blankNode();\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's object\n    if (this._predicate === null)\n      subject = this._subject, this._subject = object;\n    // If we were reading an object, replace the subject by the path's object\n    else\n      subject = this._object,  this._object  = object;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readBackwardPath` reads a '^' path\n  _readBackwardPath(token) {\n    const subject = this._blankNode();\n    let predicate, object;\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's subject\n    if (this._predicate === null)\n      object = this._subject, this._subject = subject;\n    // If we were reading an object, replace the subject by the path's subject\n    else\n      object = this._object,  this._object  = subject;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readRDFStarTailOrGraph` reads the graph of a nested RDF* quad or the end of a nested RDF* triple\n  _readRDFStarTailOrGraph(token) {\n    if (token.type !== '>>') {\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (this._graph = this._readEntity(token)) !== undefined)\n        return this._readRDFStarTail;\n      return this._error(`Expected >> to follow \"${this._object.id}\"`, token);\n    }\n    return this._readRDFStarTail(token);\n  }\n\n  // ### `_readRDFStarTail` reads the end of a nested RDF* triple\n  _readRDFStarTail(token) {\n    if (token.type !== '>>')\n      return this._error(`Expected >> but got ${token.type}`, token);\n    // Read the quad and restore the previous context\n    const quad = this._quad(this._subject, this._predicate, this._object,\n      this._graph || this.DEFAULTGRAPH);\n    this._restoreContext();\n    // If the triple was the subject, continue by reading the predicate.\n    if (this._subject === null) {\n      this._subject = quad;\n      return this._readPredicate;\n    }\n    // If the triple was the object, read context end.\n    else {\n      this._object = quad;\n      return this._getContextEndReader();\n    }\n  }\n\n  // ### `_getContextEndReader` gets the next reader function at the end of a context\n  _getContextEndReader() {\n    const contextStack = this._contextStack;\n    if (!contextStack.length)\n      return this._readPunctuation;\n\n    switch (contextStack[contextStack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    case 'formula':\n      return this._readFormulaTail;\n    case '<<':\n      return this._readRDFStarTailOrGraph;\n    }\n  }\n\n  // ### `_emit` sends a quad through the callback\n  _emit(subject, predicate, object, graph) {\n    this._callback(null, this._quad(subject, predicate, object, graph || this.DEFAULTGRAPH));\n  }\n\n  // ### `_error` emits an error message through the callback\n  _error(message, token) {\n    const err = new Error(`${message} on line ${token.line}.`);\n    err.context = {\n      token: token,\n      line: token.line,\n      previousToken: this._lexer.previousToken,\n    };\n    this._callback(err);\n    this._callback = noop;\n  }\n\n  // ### `_resolveIRI` resolves an IRI against the base path\n  _resolveIRI(iri) {\n    return /^[a-z][a-z0-9+.-]*:/i.test(iri) ? iri : this._resolveRelativeIRI(iri);\n  }\n\n  // ### `_resolveRelativeIRI` resolves an IRI against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative\n  _resolveRelativeIRI(iri) {\n    // An empty relative IRI indicates the base IRI\n    if (!iri.length)\n      return this._base;\n    // Decide resolving strategy based in the first character\n    switch (iri[0]) {\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      // Relative IRIs cannot contain a colon in the first path segment\n      return (/^[^/:]*:/.test(iri)) ? null : this._removeDotSegments(this._basePath + iri);\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986\n  _removeDotSegments(iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!/(^|\\/)\\.\\.?($|[/#?])/.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    const length = iri.length;\n    let result = '', i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return `${result}/${iri.substr(i + 1)}`;\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed quad through the callback\n  parse(input, quadCallback, prefixCallback) {\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._sparqlStyle = false;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix ? this._blankNodePrefix.substr(2)\n                                             : `b${blankNodePrefix++}_`;\n    this._prefixCallback = prefixCallback || noop;\n    this._inversePredicate = false;\n    this._quantified = Object.create(null);\n\n    // Parse synchronously if no quad callback is given\n    if (!quadCallback) {\n      const quads = [];\n      let error;\n      this._callback = (e, t) => { e ? (error = e) : t && quads.push(t); };\n      this._lexer.tokenize(input).every(token => {\n        return this._readCallback = this._readCallback(token);\n      });\n      if (error) throw error;\n      return quads;\n    }\n\n    // Parse asynchronously otherwise, executing the read callback when a token arrives\n    this._callback = quadCallback;\n    this._lexer.tokenize(input, (error, token) => {\n      if (error !== null)\n        this._callback(error), this._callback = noop;\n      else if (this._readCallback)\n        this._readCallback = this._readCallback(token);\n    });\n  }\n}\n\n// The empty function\nfunction noop() {}\n\n// Initializes the parser with the given data factory\nfunction initDataFactory(parser, factory) {\n  // Set factory methods\n  const namedNode = factory.namedNode;\n  parser._namedNode   = namedNode;\n  parser._blankNode   = factory.blankNode;\n  parser._literal     = factory.literal;\n  parser._variable    = factory.variable;\n  parser._quad        = factory.quad;\n  parser.DEFAULTGRAPH = factory.defaultGraph();\n\n  // Set common named nodes\n  parser.RDF_FIRST  = namedNode(namespaces.rdf.first);\n  parser.RDF_REST   = namedNode(namespaces.rdf.rest);\n  parser.RDF_NIL    = namedNode(namespaces.rdf.nil);\n  parser.N3_FORALL  = namedNode(namespaces.r.forAll);\n  parser.N3_FORSOME = namedNode(namespaces.r.forSome);\n  parser.ABBREVIATIONS = {\n    'a': namedNode(namespaces.rdf.type),\n    '=': namedNode(namespaces.owl.sameAs),\n    '>': namedNode(namespaces.log.implies),\n  };\n  parser.QUANTIFIERS_GRAPH = namedNode('urn:n3:quantifiers');\n}\ninitDataFactory(N3Parser.prototype, N3DataFactory);\n","// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nconst escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals() {\n    return false;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      let output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end: done => { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._lineMode = false;\n      this._graph = DEFAULTGRAPH;\n      this._baseIRI = options.baseIRI;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n    }\n    else {\n      this._lineMode = true;\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : `${this._encodeIriOrBlank(graph)} {\\n`));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(`, ${this._encodeObject(object)}`, done);\n        // Same subject, different predicate\n        else\n          this._write(`;\\n    ${\n                      this._encodePredicate(this._predicate = predicate)} ${\n                      this._encodeObject(object)}`, done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write(`${(this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject)} ${\n                    this._encodePredicate(this._predicate = predicate)} ${\n                    this._encodeObject(object)}`, done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  `${this._encodeSubject(subject)} ${\n            this._encodeIriOrBlank(predicate)} ${\n            this._encodeObject(object)\n            }${graph && graph.value ? ` ${this._encodeIriOrBlank(graph)} .\\n` : ' .\\n'}`;\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(t => {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : `_:${entity.value}`;\n    }\n    let iri = entity.value;\n    // Use relative IRIs if requested and possible\n    if (this._baseIRI && iri.startsWith(this._baseIRI))\n      iri = iri.substr(this._baseIRI.length);\n    // Escape special characters\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    const prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? `<${iri}>` :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    let value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n\n    // Write a language-tagged literal\n    if (literal.language)\n      return `\"${value}\"@${literal.language}`;\n\n    // Write dedicated literals per data type\n    if (this._lineMode) {\n      // Only abbreviate strings in N-Triples or N-Quads\n      if (literal.datatype.value === xsd.string)\n        return `\"${value}\"`;\n    }\n    else {\n      // Use common datatype abbreviations in Turtle or TriG\n      switch (literal.datatype.value) {\n      case xsd.string:\n        return `\"${value}\"`;\n      case xsd.boolean:\n        if (value === 'true' || value === 'false')\n          return value;\n        break;\n      case xsd.integer:\n        if (/^[+-]?\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.decimal:\n        if (/^[+-]?\\d*\\.\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.double:\n        if (/^[+-]?(?:\\d+\\.\\d*|\\.?\\d+)[eE][+-]?\\d+$/.test(value))\n          return value;\n        break;\n      }\n    }\n\n    // Write a regular datatyped literal\n    return `\"${value}\"^^${this._encodeIriOrBlank(literal.datatype)}`;\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    const prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    // Ignore prefixes if not supported by the serialization\n    if (!this._prefixIRIs)\n      return done && done();\n\n    // Write all new prefixes\n    let hasPrefixes = false;\n    for (let prefix in prefixes) {\n      let iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      this._prefixIRIs[iri] = (prefix += ':');\n      this._write(`@prefix ${prefix} <${iri}>.\\n`);\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      let IRIlist = '', prefixList = '';\n      for (const prefixIRI in this._prefixIRIs) {\n        IRIlist += IRIlist ? `|${prefixIRI}` : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + this._prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp(`^(?:${prefixList})[^\\/]*$|` +\n                                     `^(${IRIlist})([a-zA-Z][\\\\-_a-zA-Z0-9]*)$`);\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    let children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm(`[ ${this._encodePredicate(child.predicate)} ${\n                                  this._encodeObject(child.object)} ]`);\n    // Generate a multi-triple or nested blank node\n    default:\n      let contents = '[';\n      // Write all triples in order\n      for (let i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += `, ${this._encodeObject(child.object)}`;\n        // Otherwise, write the predicate and the object\n        else {\n          contents += `${(i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate)} ${\n                      this._encodeObject(child.object)}`;\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(`${contents}\\n]`);\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    const length = elements && elements.length || 0, contents = new Array(length);\n    for (let i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm(`(${contents.join(' ')})`);\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    let singleDone = done && ((error, result) => { singleDone = null, done(error, result); });\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  let result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n","// **N3Store** objects store N3 quads by graph in memory.\nimport { default as N3DataFactory, termToId, termFromId } from './N3DataFactory';\nimport { Readable } from 'readable-stream';\nimport namespaces from './IRIs';\n\n// ## Constructor\nexport default class N3Store {\n  constructor(quads, options) {\n    // The number of quads is initially zero\n    this._size = 0;\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null);\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0;\n    this._ids = Object.create(null);\n    this._ids['><'] = 0; // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null); // inverse of `_ids`\n    // `_blankNodeIndex` is the index of the last automatically named blank node\n    this._blankNodeIndex = 0;\n\n    // Shift parameters if `quads` is not given\n    if (!options && quads && !quads[0])\n      options = quads, quads = null;\n    options = options || {};\n    this._factory = options.factory || N3DataFactory;\n\n    // Add quads if passed\n    if (quads)\n      this.addQuads(quads);\n  }\n\n  // ## Public properties\n\n  // ### `size` returns the number of quads in the store\n  get size() {\n    // Return the quad count if if was cached\n    let size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0;\n    const graphs = this._graphs;\n    let subjects, subject;\n    for (const graphKey in graphs)\n      for (const subjectKey in (subjects = graphs[graphKey].subjects))\n        for (const predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex(index0, key0, key1, key2) {\n    // Create layers as necessary\n    const index1 = index0[key0] || (index0[key0] = {});\n    const index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the quad\n    const existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex(index0, key0, key1, key2) {\n    // Remove the quad from the index\n    const index1 = index0[key0], index2 = index1[key1];\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty\n    for (const key in index2) return;\n    delete index1[key1];\n    for (const key in index1) return;\n    delete index0[key0];\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created quads.\n  // If `callback` is given, each result is passed through it\n  // and iteration halts when it returns truthy for any quad.\n  // If instead `array` is given, each result is added to the array.\n  _findInIndex(index0, key0, key1, key2, name0, name1, name2, graph, callback, array) {\n    let tmp, index1, index2;\n    // Depending on the number of variables, keys or reverse index are faster\n    const varCount = !key0 + !key1 + !key2,\n        entityKeys = varCount > 1 ? Object.keys(this._ids) : this._entities;\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      const entity0 = entityKeys[value0];\n\n      if (index1 = index0[value0]) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          const entity1 = entityKeys[value1];\n\n          if (index2 = index1[value1]) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            const values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create quads for all items found in index 2.\n            for (let l = 0; l < values.length; l++) {\n              const parts = { subject: null, predicate: null, object: null };\n              parts[name0] = termFromId(entity0, this._factory);\n              parts[name1] = termFromId(entity1, this._factory);\n              parts[name2] = termFromId(entityKeys[values[l]], this._factory);\n              const quad = this._factory.quad(\n                parts.subject, parts.predicate, parts.object, termFromId(graph, this._factory));\n              if (array)\n                array.push(quad);\n              else if (callback(quad))\n                return true;\n            }\n          }\n        }\n      }\n    }\n    return array;\n  }\n\n  // ### `_loop` executes the callback on all keys of index 0\n  _loop(index0, callback) {\n    for (const key0 in index0)\n      callback(key0);\n  }\n\n  // ### `_loopByKey0` executes the callback on all keys of a certain entry in index 0\n  _loopByKey0(index0, key0, callback) {\n    let index1, key1;\n    if (index1 = index0[key0]) {\n      for (key1 in index1)\n        callback(key1);\n    }\n  }\n\n  // ### `_loopByKey1` executes the callback on given keys of all entries in index 0\n  _loopByKey1(index0, key1, callback) {\n    let key0, index1;\n    for (key0 in index0) {\n      index1 = index0[key0];\n      if (index1[key1])\n        callback(key0);\n    }\n  }\n\n  // ### `_loopBy2Keys` executes the callback on given keys of certain entries in index 2\n  _loopBy2Keys(index0, key0, key1, callback) {\n    let index1, index2, key2;\n    if ((index1 = index0[key0]) && (index2 = index1[key1])) {\n      for (key2 in index2)\n        callback(key2);\n    }\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex(index0, key0, key1, key2) {\n    let count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the quad if it exists\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all quads\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs(graph) {\n    if (!isString(graph))\n      return this._graphs;\n    const graphs = {};\n    graphs[graph] = this._graphs[graph];\n    return graphs;\n  }\n\n  // ### `_uniqueEntities` returns a function that accepts an entity ID\n  // and passes the corresponding entity to callback if it hasn't occurred before.\n  _uniqueEntities(callback) {\n    const uniqueIds = Object.create(null);\n    return id => {\n      if (!(id in uniqueIds)) {\n        uniqueIds[id] = true;\n        callback(termFromId(this._entities[id], this._factory));\n      }\n    };\n  }\n\n  // ## Public methods\n\n  // ### `add` adds the specified quad to the dataset.\n  // Returns the dataset instance it was called on.\n  // Existing quads, as defined in Quad.equals, will be ignored.\n  add(quad) {\n    this.addQuad(quad);\n    return this;\n  }\n\n  // ### `addQuad` adds a new quad to the store.\n  // Returns if the quad index has changed, if the quad did not already exist.\n  addQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find the graph that will contain the triple\n    let graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    const ids = this._ids;\n    const entities = this._entities;\n    subject   = ids[subject]   || (ids[entities[++this._id] = subject]   = this._id);\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id);\n    object    = ids[object]    || (ids[entities[++this._id] = object]    = this._id);\n\n    const changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached quad count is now invalid\n    this._size = null;\n    return changed;\n  }\n\n  // ### `addQuads` adds multiple quads to the store\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `delete` removes the specified quad from the dataset.\n  // Returns the dataset instance it was called on.\n  delete(quad) {\n    this.removeQuad(quad);\n    return this;\n  }\n\n  // ### `has` determines whether a dataset includes a certain quad.\n  // Returns true or false as appropriate.\n  has(quad) {\n    const quads = this.getQuads(quad.subject, quad.predicate, quad.object, quad.graph);\n    return quads.length !== 0;\n  }\n\n  // ### `import` adds a stream of quads to the store\n  import(stream) {\n    stream.on('data', quad => { this.addQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeQuad` removes a quad from the store if it exists\n  removeQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    const ids = this._ids, graphs = this._graphs;\n    let graphItem, subjects, predicates;\n    if (!(subject    = ids[subject]) || !(predicate = ids[predicate]) ||\n        !(object     = ids[object])  || !(graphItem = graphs[graph])  ||\n        !(subjects   = graphItem.subjects[subject]) ||\n        !(predicates = subjects[predicate]) ||\n        !(object in predicates))\n      return false;\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  }\n\n  // ### `removeQuads` removes multiple quads from the store\n  removeQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.removeQuad(quads[i]);\n  }\n\n  // ### `remove` removes a stream of quads from the store\n  remove(stream) {\n    stream.on('data', quad => { this.removeQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeMatches` removes all matching quads from the store\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  removeMatches(subject, predicate, object, graph) {\n    const stream = new Readable({ objectMode: true });\n\n    stream._read = () => {\n      for (const quad of this.getQuads(subject, predicate, object, graph))\n        stream.push(quad);\n      stream.push(null);\n    };\n\n    return this.remove(stream);\n  }\n\n  // ### `deleteGraph` removes all triples with the given graph from the store\n  deleteGraph(graph) {\n    return this.removeMatches(null, null, null, graph);\n  }\n\n  // ### `getQuads` returns an array of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const quads = [], graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return quads;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the object index will be the fastest\n            this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                              'object', 'subject', 'predicate', graphId, null, quads);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            this._findInIndex(content.subjects, subjectId, predicateId, null,\n                              'subject', 'predicate', 'object', graphId, null, quads);\n        }\n        else if (predicateId)\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          this._findInIndex(content.predicates, predicateId, objectId, null,\n                            'predicate', 'object', 'subject', graphId, null, quads);\n        else if (objectId)\n          // If only object is given, the object index will be the fastest\n          this._findInIndex(content.objects, objectId, null, null,\n                            'object', 'subject', 'predicate', graphId, null, quads);\n        else\n          // If nothing is given, iterate subjects and predicates first\n          this._findInIndex(content.subjects, null, null, null,\n                            'subject', 'predicate', 'object', graphId, null, quads);\n      }\n    }\n    return quads;\n  }\n\n  // ### `match` returns a new dataset that is comprised of all quads in the current instance matching the given arguments.\n  // The logic described in Quad Matching is applied for each quad in this dataset to check if it should be included in the output dataset.\n  // Note: This method always returns a new DatasetCore, even if that dataset contains no quads.\n  // Note: Since a DatasetCore is an unordered set, the order of the quads within the returned sequence is arbitrary.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  // For backwards compatibility, the object return also implements the Readable stream interface.\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this, subject, predicate, object, graph);\n  }\n\n  // ### `countQuads` returns the number of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  countQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let count = 0, content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return 0;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subject) {\n          if (object)\n            // If subject and object are given, the object index will be the fastest\n            count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            count += this._countInIndex(content.subjects, subjectId, predicateId, objectId);\n        }\n        else if (predicate) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          count += this._countInIndex(content.predicates, predicateId, objectId, subjectId);\n        }\n        else {\n          // If only object is possibly given, the object index will be the fastest\n          count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `forEach` executes the callback on all quads.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forEach(callback, subject, predicate, object, graph) {\n    this.some(quad => {\n      callback(quad);\n      return false;\n    }, subject, predicate, object, graph);\n  }\n\n  // ### `every` executes the callback on all quads,\n  // and returns `true` if it returns truthy for all them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  every(callback, subject, predicate, object, graph) {\n    let some = false;\n    const every = !this.some(quad => {\n      some = true;\n      return !callback(quad);\n    }, subject, predicate, object, graph);\n    return some && every;\n  }\n\n  // ### `some` executes the callback on all quads,\n  // and returns `true` if it returns truthy for any of them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  some(callback, subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return false;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId) {\n          // If subject and object are given, the object index will be the fastest\n            if (this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                                  'object', 'subject', 'predicate', graphId, callback, null))\n              return true;\n          }\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            if (this._findInIndex(content.subjects, subjectId, predicateId, null,\n                                  'subject', 'predicate', 'object', graphId, callback, null))\n              return true;\n        }\n        else if (predicateId) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          if (this._findInIndex(content.predicates, predicateId, objectId, null,\n                                'predicate', 'object', 'subject', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else if (objectId) {\n          // If only object is given, the object index will be the fastest\n          if (this._findInIndex(content.objects, objectId, null, null,\n                                'object', 'subject', 'predicate', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else\n        // If nothing is given, iterate subjects and predicates first\n        if (this._findInIndex(content.subjects, null, null, null,\n                              'subject', 'predicate', 'object', graphId, callback, null)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // ### `getSubjects` returns all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getSubjects(predicate, object, graph) {\n    const results = [];\n    this.forSubjects(s => { results.push(s); }, predicate, object, graph);\n    return results;\n  }\n\n  // ### `forSubjects` executes the callback on all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forSubjects(callback, predicate, object, graph) {\n    // Convert terms to internal string representation\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, predicateId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (predicateId) {\n          if (objectId)\n            // If predicate and object are given, the POS index is best.\n            this._loopBy2Keys(content.predicates, predicateId, objectId, callback);\n          else\n            // If only predicate is given, the SPO index is best.\n            this._loopByKey1(content.subjects, predicateId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the OSP index is best.\n          this._loopByKey0(content.objects, objectId, callback);\n        else\n          // If no params given, iterate all the subjects\n          this._loop(content.subjects, callback);\n      }\n    }\n  }\n\n  // ### `getPredicates` returns all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getPredicates(subject, object, graph) {\n    const results = [];\n    this.forPredicates(p => { results.push(p); }, subject, object, graph);\n    return results;\n  }\n\n  // ### `forPredicates` executes the callback on all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forPredicates(callback, subject, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject) && !(subjectId = ids[subject]) ||\n        isString(object)  && !(objectId  = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the OSP index is best.\n            this._loopBy2Keys(content.objects, objectId, subjectId, callback);\n          else\n            // If only subject is given, the SPO index is best.\n            this._loopByKey0(content.subjects, subjectId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the POS index is best.\n          this._loopByKey1(content.predicates, objectId, callback);\n        else\n          // If no params given, iterate all the predicates.\n          this._loop(content.predicates, callback);\n      }\n    }\n  }\n\n  // ### `getObjects` returns all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getObjects(subject, predicate, graph) {\n    const results = [];\n    this.forObjects(o => { results.push(o); }, subject, predicate, graph);\n    return results;\n  }\n\n  // ### `forObjects` executes the callback on all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forObjects(callback, subject, predicate, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, predicateId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject]) ||\n        isString(predicate) && !(predicateId = ids[predicate]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (predicateId)\n            // If subject and predicate are given, the SPO index is best.\n            this._loopBy2Keys(content.subjects, subjectId, predicateId, callback);\n          else\n            // If only subject is given, the OSP index is best.\n            this._loopByKey1(content.objects, subjectId, callback);\n        }\n        else if (predicateId)\n          // If only predicate is given, the POS index is best.\n          this._loopByKey0(content.predicates, predicateId, callback);\n        else\n          // If no params given, iterate all the objects.\n          this._loop(content.objects, callback);\n      }\n    }\n  }\n\n  // ### `getGraphs` returns all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getGraphs(subject, predicate, object) {\n    const results = [];\n    this.forGraphs(g => { results.push(g); }, subject, predicate, object);\n    return results;\n  }\n\n  // ### `forGraphs` executes the callback on all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forGraphs(callback, subject, predicate, object) {\n    for (const graph in this._graphs) {\n      this.some(quad => {\n        callback(quad.graph);\n        return true; // Halt iteration of some()\n      }, subject, predicate, object, graph);\n    }\n  }\n\n  // ### `createBlankNode` creates a new blank node, returning its name\n  createBlankNode(suggestedName) {\n    let name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = `_:${suggestedName}`, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = `_:b${this._blankNodeIndex++}`; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    this._entities[this._id] = name;\n    return this._factory.blankNode(name.substr(2));\n  }\n\n  // ### `extractLists` finds and removes all list triples\n  // and returns the items per list.\n  extractLists({ remove = false, ignoreErrors = false } = {}) {\n    const lists = {}; // has scalar keys so could be a simple Object\n    const onError = ignoreErrors ? (() => true) :\n                  ((node, message) => { throw new Error(`${node.value} ${message}`); });\n\n    // Traverse each list from its tail\n    const tails = this.getQuads(null, namespaces.rdf.rest, namespaces.rdf.nil, null);\n    const toRemove = remove ? [...tails] : [];\n    tails.forEach(tailQuad => {\n      const items = [];             // the members found as objects of rdf:first quads\n      let malformed = false;      // signals whether the current list is malformed\n      let head;                   // the head of the list (_:b1 in above example)\n      let headPos;                // set to subject or object when head is set\n      const graph = tailQuad.graph; // make sure list is in exactly one graph\n\n      // Traverse the list from tail to end\n      let current = tailQuad.subject;\n      while (current && !malformed) {\n        const objectQuads = this.getQuads(null, null, current, null);\n        const subjectQuads = this.getQuads(current, null, null, null);\n        let quad, first = null, rest = null, parent = null;\n\n        // Find the first and rest of this list node\n        for (let i = 0; i < subjectQuads.length && !malformed; i++) {\n          quad = subjectQuads[i];\n          if (!quad.graph.equals(graph))\n            malformed = onError(current, 'not confined to single graph');\n          else if (head)\n            malformed = onError(current, 'has non-list arcs out');\n\n          // one rdf:first\n          else if (quad.predicate.value === namespaces.rdf.first) {\n            if (first)\n              malformed = onError(current, 'has multiple rdf:first arcs');\n            else\n              toRemove.push(first = quad);\n          }\n\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (rest)\n              malformed = onError(current, 'has multiple rdf:rest arcs');\n            else\n              toRemove.push(rest = quad);\n          }\n\n          // alien triple\n          else if (objectQuads.length)\n            malformed = onError(current, 'can\\'t be subject and object');\n          else {\n            head = quad; // e.g. { (1 2 3) :p :o }\n            headPos = 'subject';\n          }\n        }\n\n        // { :s :p (1 2) } arrives here with no head\n        // { (1 2) :p :o } arrives here with head set to the list.\n        for (let i = 0; i < objectQuads.length && !malformed; ++i) {\n          quad = objectQuads[i];\n          if (head)\n            malformed = onError(current, 'can\\'t have coreferences');\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (parent)\n              malformed = onError(current, 'has incoming rdf:rest arcs');\n            else\n              parent = quad;\n          }\n          else {\n            head = quad; // e.g. { :s :p (1 2) }\n            headPos = 'object';\n          }\n        }\n\n        // Store the list item and continue with parent\n        if (!first)\n          malformed = onError(current, 'has no list head');\n        else\n          items.unshift(first.object);\n        current = parent && parent.subject;\n      }\n\n      // Don't remove any quads if the list is malformed\n      if (malformed)\n        remove = false;\n      // Store the list under the value of its head\n      else if (head)\n        lists[head[headPos].value] = items;\n    });\n\n    // Remove list quads if requested\n    if (remove)\n      this.removeQuads(toRemove);\n    return lists;\n  }\n\n  // ### Store is an iterable.\n  // Can be used where iterables are expected: for...of loops, array spread operator,\n  // `yield*`, and destructuring assignment (order is not guaranteed).\n  *[Symbol.iterator]() {\n    yield* this.getQuads();\n  }\n}\n\n// Determines whether the argument is a string\nfunction isString(s) {\n  return typeof s === 'string' || s instanceof String;\n}\n\n/**\n * A class that implements both DatasetCore and Readable.\n */\nclass DatasetCoreAndReadableStream extends Readable {\n  constructor(n3Store, subject, predicate, object, graph) {\n    super({ objectMode: true });\n    Object.assign(this, { n3Store, subject, predicate, object, graph });\n  }\n\n  get filtered() {\n    if (!this._filtered) {\n      const { n3Store, graph, object, predicate, subject } = this;\n      const quads = n3Store.getQuads(subject, predicate, object, graph);\n      this._filtered = new N3Store(quads, { factory: n3Store._factory });\n    }\n    return this._filtered;\n  }\n  get size() {\n    return this.filtered.size;\n  }\n\n  _read() {\n    for (const quad of this.filtered.getQuads())\n      this.push(quad);\n    this.push(null);\n  }\n\n  add(quad) {\n    return this.filtered.add(quad);\n  }\n\n  delete(quad) {\n    return this.filtered.delete(quad);\n  }\n\n  has(quad) {\n    return this.filtered.has(quad);\n  }\n\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this.filtered, subject, predicate, object, graph);\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.filtered.getQuads();\n  }\n}\n","// **N3StreamParser** parses a text stream into a quad stream.\nimport N3Parser from './N3Parser';\nimport { Transform } from 'readable-stream';\n\n// ## Constructor\nexport default class N3StreamParser extends Transform {\n  constructor(options) {\n    super({ decodeStrings: true });\n    this._readableState.objectMode = true;\n\n    // Set up parser with dummy stream to obtain `data` and `end` callbacks\n    const parser = new N3Parser(options);\n    let onData, onEnd;\n    parser.parse({\n      on: (event, callback) => {\n        switch (event) {\n        case 'data': onData = callback; break;\n        case 'end':   onEnd = callback; break;\n        }\n      },\n    },\n      // Handle quads by pushing them down the pipeline\n      (error, quad) => { error && this.emit('error', error) || quad && this.push(quad); },\n      // Emit prefixes through the `prefix` event\n      (prefix, uri) => { this.emit('prefix', prefix, uri); }\n    );\n\n    // Implement Transform methods through parser callbacks\n    this._transform = (chunk, encoding, done) => { onData(chunk); done(); };\n    this._flush = done => { onEnd(); done(); };\n  }\n\n  // ### Parses a stream of strings\n  import(stream) {\n    stream.on('data',  chunk => { this.write(chunk); });\n    stream.on('end',   ()      => { this.end(); });\n    stream.on('error', error => { this.emit('error', error); });\n    return this;\n  }\n}\n","// **N3StreamWriter** serializes a quad stream into a text stream.\nimport { Transform } from 'readable-stream';\nimport N3Writer from './N3Writer';\n\n// ## Constructor\nexport default class N3StreamWriter extends Transform {\n  constructor(options) {\n    super({ encoding: 'utf8', writableObjectMode: true });\n\n    // Set up writer with a dummy stream object\n    const writer = this._writer = new N3Writer({\n      write: (quad, encoding, callback) => { this.push(quad); callback && callback(); },\n      end: callback => { this.push(null); callback && callback(); },\n    }, options);\n\n    // Implement Transform methods on top of writer\n    this._transform = (quad, encoding, done) => { writer.addQuad(quad, done); };\n    this._flush = done => { writer.end(done); };\n  }\n\n// ### Serializes a stream of quads\n  import(stream) {\n    stream.on('data',   quad => { this.write(quad); });\n    stream.on('end',    () => { this.end(); });\n    stream.on('error',  error => { this.emit('error', error); });\n    stream.on('prefix', (prefix, iri) => { this._writer.addPrefix(prefix, iri); });\n    return this;\n  }\n}\n"],"sourceRoot":""}